pipeline {
  agent {
    node {
      label 'maven'
    }
  }
  parameters {
      choice(name:'MODULE_NAME',choices:['fullstack-auth','fullstack-cart','fullstack-coupon','fullstack-gateway','fullstack-member','fullstack-order','fullstack-product','fullstack-search','fullstack-seckill','fullstack-thirdparty','fullstack-ware','renren-fast'],description:'对于多模块项目，选择一个待构建的模块')
      choice(name:'BRANCH_NAME',choices:['master','develop'],description:'请选择SCM分支')
      string(name:'TAG_NAME',defaultValue: '',description:'镜像标签，不指定时默认：yyyyMMddHHmmss')
  }
  environment {
    DOCKER_CREDENTIAL_ID = 'harbor-id'
    GITHUB_CREDENTIAL_ID = 'gitee-id'
    KUBECONFIG_CREDENTIAL_ID = 'fsmall-kubeconfig'
    REGISTRY = '192.168.32.116:30002'
    DOCKERHUB_NAMESPACE = 'ks-devops-harbor'
    GITHUB_ACCOUNT = 'Rushing0711'
  }
  stages {
    stage('拉取代码') {
      agent none
      steps {
        sh 'echo 检出代码并构建模块 $MODULE_NAME'
        git(url: 'https://gitee.com/EmonCodingBackEnd/backend-fullstack-learning.git', credentialsId: 'gitee-id', branch: 'master', changelog: true, poll: false)
      }
    }
    
      stage ('构建并推送镜像') {
        steps {
          sh 'echo 构建并推送镜像到镜像仓库 $REGISTRY/$DOCKERHUB_NAMESPACE/$MODULE_NAME:$BRANCH_NAME-$BUILD_NUMBER'
          container ('maven') {
            sh 'mvn -pl $MODULE_NAME -am clean package -DskipTests'
            sh 'cd $MODULE_NAME && docker build -f k8s/Dockerfile -t $REGISTRY/$DOCKERHUB_NAMESPACE/$MODULE_NAME:$BRANCH_NAME-$BUILD_NUMBER .'
            withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "$DOCKER_CREDENTIAL_ID" ,)]) {
                sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
                sh 'docker push $REGISTRY/$DOCKERHUB_NAMESPACE/$MODULE_NAME:$BRANCH_NAME-$BUILD_NUMBER'
            }
          }
        }
      }
  }

}